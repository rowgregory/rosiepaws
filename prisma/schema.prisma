// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String   @id @default(cuid())
  firstName           String   @db.VarChar(255)
  lastName            String   @db.VarChar(255)
  password            String   @db.VarChar(255)
  email               String   @unique @db.VarChar(255)
  isAdmin             Boolean  @default(false)
  isSuperUser         Boolean  @default(false)
  isSupporter         Boolean  @default(false)
  role                String   @db.VarChar(255)
  isSoundEffectsOn    Boolean  @default(true)
  isBackgroundMusicOn Boolean  @default(false)
  securityQuestion    String   @db.VarChar(255)
  securityAnswerHash  String   @db.VarChar(255)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Log {
  id        String   @id @default(cuid())
  level     String // e.g., 'info', 'error', 'debug'
  message   String
  metadata  Json? // Optional, store additional context
  createdAt DateTime @default(now())
}

model TextBlock {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String
  type      String
  mimeType  String   @default("")
  fileName  String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PhotoGalleryImage {
  id            String   @id @default(cuid())
  imageUrl      String
  imageFilename String   @db.VarChar(255)
  isHomeHero    Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Testimonial {
  id        String   @id @default(cuid())
  name      String
  review    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Newsletter {
  id                       String   @id @default(cuid())
  firstName                String   @db.VarChar(255)
  lastName                 String   @db.VarChar(255)
  email                    String   @unique @db.VarChar(255)
  isOption1                Boolean  @default(false)
  isOption2                Boolean  @default(false)
  isOption3                Boolean  @default(false)
  isOption4                Boolean  @default(false)
  agreedToPrivacyStatement Boolean  @default(false)
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
}

model Question {
  id           String   @id @default(cuid())
  name         String   @db.VarChar(255)
  email        String   @db.VarChar(255)
  message      String   @db.VarChar(500)
  hasResponded Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Address {
  id            String  @id @default(cuid())
  addressLine1  String? @db.VarChar(255)
  addressLine2  String? @db.VarChar(255)
  city          String? @db.VarChar(255)
  state         String? @db.VarChar(255)
  zipPostalCode String? @db.VarChar(255)
}

model AppMetric {
  id           String   @id @default(cuid())
  desktopCount Int      @default(0)
  mobileCount  Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Changelog {
  id          String   @id @default(cuid())
  version     String
  title       String
  description String   @db.Text
  releasedAt  DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
